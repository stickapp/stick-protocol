# Generated by Django 3.1.5 on 2022-09-17 14:02

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('stick_protocol', '0011_auto_20210717_1937'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='encryptionsenderkey',
            name='unique_esk',
        ),
        migrations.RemoveConstraint(
            model_name='identitykey',
            name='unique_identity_key',
        ),
        migrations.RemoveConstraint(
            model_name='prekey',
            name='unique_prekey',
        ),
        migrations.RemoveConstraint(
            model_name='signedprekey',
            name='unique_signed_prekey',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='forOneTimeId',
            new_name='for_one_time_id',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='forUser',
            new_name='for_user',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='identityKey',
            new_name='identity_key',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='ofOneTimeId',
            new_name='of_one_time_id',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='ofUser',
            new_name='of_user',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='partyId',
            new_name='party_id',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='preKey',
            new_name='pre_key',
        ),
        migrations.RenameField(
            model_name='decryptionsenderkey',
            old_name='stickId',
            new_name='stick_id',
        ),
        migrations.RenameField(
            model_name='encryptionsenderkey',
            old_name='chainId',
            new_name='chain_id',
        ),
        migrations.RenameField(
            model_name='encryptionsenderkey',
            old_name='identityKey',
            new_name='identity_key',
        ),
        migrations.RenameField(
            model_name='encryptionsenderkey',
            old_name='keyId',
            new_name='key_id',
        ),
        migrations.RenameField(
            model_name='encryptionsenderkey',
            old_name='partyId',
            new_name='party_id',
        ),
        migrations.RenameField(
            model_name='encryptionsenderkey',
            old_name='preKey',
            new_name='pre_key',
        ),
        migrations.RenameField(
            model_name='identitykey',
            old_name='keyId',
            new_name='key_id',
        ),
        migrations.RenameField(
            model_name='party',
            old_name='partyHash',
            new_name='party_hash',
        ),
        migrations.RenameField(
            model_name='pendingkey',
            old_name='stickId',
            new_name='stick_id',
        ),
        migrations.RenameField(
            model_name='prekey',
            old_name='keyId',
            new_name='key_id',
        ),
        migrations.RenameField(
            model_name='signedprekey',
            old_name='keyId',
            new_name='key_id',
        ),
        migrations.AddConstraint(
            model_name='encryptionsenderkey',
            constraint=models.UniqueConstraint(fields=('party_id', 'chain_id', 'user'), name='unique_esk'),
        ),
        migrations.AddConstraint(
            model_name='identitykey',
            constraint=models.UniqueConstraint(fields=('key_id', 'user'), name='unique_identity_key'),
        ),
        migrations.AddConstraint(
            model_name='prekey',
            constraint=models.UniqueConstraint(fields=('key_id', 'user'), name='unique_prekey'),
        ),
        migrations.AddConstraint(
            model_name='signedprekey',
            constraint=models.UniqueConstraint(fields=('key_id', 'user'), name='unique_signed_prekey'),
        ),
    ]
